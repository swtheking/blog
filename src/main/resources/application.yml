###################  项目端口配置  ###################
server:
  port: 9090
  servlet:
    context-path: /blog

###################  spring配置  ###################
logging:
  level:
    ROOT: info
    com:
      xncoding: info

################### 配置MySQL数据源 ###################
spring:
  datasource:
    url: jdbc:log4jdbc:mysql://127.0.0.1:3306/blog_work?useSSL=false&serverTimezone=GMT%2B8&characterEncoding=utf-8
    username: root
    password: root
    driver-class-name: net.sf.log4jdbc.DriverSpy  # 使用了log4jdbc
    # 使用druid连接池
    type: com.alibaba.druid.pool.DruidDataSource
    # 配置druid连接池
    initialSize: 5  # 初始连接数
    minIdle: 5      # 最小空闲数
    maxActive: 20   # 最大活跃数
    maxWait: 60000  # 最大等待时间(ms)
    timeBetweenEvictionRunsMillis: 60000
    minEvictableIdleTimeMillis: 30000
    filters: stat
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    poolPreparedStatements: true
    maxOpenPreparedStatements: 20
    sql-script-encoding: utf-8
---
biz:
  datasource:
    url: jdbc:log4jdbc:mysql://127.0.0.1:3306/test?useSSL=false&serverTimezone=GMT%2B8&characterEncoding=utf-8
    username: root
    password: root
################### Jpa配置 ###################
spring:
  jpa:
    # 更新数据表结构
    hibernate:
      ddl-auto: update
      naming:
        physical-strategy: org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy #Jpa生成表的策略遇到大写变量用’_‘分隔
    # 在日志中打印出执行sql语句的信息
    show-sql: false #使用logging控制日志时可以为false
    properties:
      hibernate:
        format_sql: true        # 格式化打印sql
        use_sql_comments: false  # 指出是什么操作生成了该语句
    database-platform:  org.hibernate.dialect.MySQL5InnoDBDialect #设置数据库方言  记住必须要使用 MySQL5InnoDBDialect 指定数据库类型对应InnoDB  ;如果使用MySQLDialect 则对应的是MyISAM
---
spring:
        aop:
          auto: true
        http:
          encoding:
            charset: utf-8
            enabled: true
            force: true
logging:
  config: classpath:log4j2.xml
  file:
    path: D:/logs/springboot-aop
  level: # 屏蔽其他日志信息
    jdbc.sqlonly: warn
    jdbc.sqltiming: info
    jdbc.resultsettable: info
    jdbc.resultset: warn
    jdbc.connection: warn
    jdbc.audit: warn
---
################### 热部署 ###################
spring:
  devtools:
    restart:
      enabled: false  #设置开启热部署
      additional-paths: src/main/java #重启目录
      exclude: WEB-INF/**
  freemarker:
    cache: false    #页面不加载缓存，修改即时生效
  rabbitmq:
    host: 172.16.22.200
    port: 5672
    username: cpw
    password: 123456
    virtual-host: /
    listener:
      simple:
        prefetch: 1
        default-requeue-rejected: true
    publisher-confirm-type: correlated
  servlet:
    multipart:
      max-file-size: 100MB
      max-request-size: 600MB


xncoding:
  muti-datasource-open: true #是否开启多数据源(true/false)

##################httpclient##################
httpclient:
  connectTimeout: 20000
  requestTimeout: 20000
  socketTimeout: 30000
  defaultMaxPerRoute: 100
  maxTotalConnections: 300
  defaultKeepAliveTimeMillis: 20000
  closeIdleConnectionWaitTimeSecs: 30

####oss####
aliyun:
  oss:
    endpoint: oss-cn-hangzhou.aliyuncs.com # oss对外服务的访问域名
    accessKeyId: LTAI4G5XhEiqm8YyZDEmjLM8 # 访问身份验证中用到用户标识
    accessKeySecret: Qqw8JIw2SQasHaddr0pXfXYJoHtq3i # 用户用于加密签名字符串和oss用来验证签名字符串的密钥
    bucketName: oss-sw-demo # oss的存储空间
    url: http://oss-sw-demo.oss-cn-hangzhou.aliyuncs.com/
    path: images/
    maxErrorRetry: 3
    connectionTimeout: 500

